=============================================
永不过期token: 
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

https://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@github.com/anyexiuming/picture.git
=================================================
错误！！
git push 或者git clone 时报错 
OpenSSL_read:Connection was aborted,error 10053
解决:
Git默认限制推送的大小，执行以下命令更改限制大小即可解决。
1.git config --global http.postBuffer 524288000
2.git config --global http.sslVerify "false"
错误！！
error: failed to push some refs to xxx
解决:
git pull  --rebase  picture(本地)  main(远程)

==================================================
一.将远程的项目clone再添加内容提交
1. git clone 
git clone https://github.com/anyexiuming/picture.git

2.新增文件后,暂存区
git add .

3.工作区
git commit -m "first commit" 

4.如果远程没有变化可以直接push,如果有,先pull后push
git pull  origin（远程在本地的别名） main(远程)
//git pull  main(远程)

5.推到远端(git会提示输入token) 
git push -u  origin(远)  main(远程)

本地分支默认master
# git pull  origin<远>  <远程分支名>:<本地分支名>
# git push  origin<远>  <本地分支名>:<远程分支名>
例如本地和远程的分支名都是master：
  git pull origin master
  git push origin master
=====================================

================================================
二.成功拉取推送
1.git init
2.git remote add  origin(远)  https://github.com/anyexiuming/picture.git 
//origin是远程仓库在本地的默认别名

3.新增内容
4.git add . 
5.git commit -m "xx" 
6.git pull （--rebase） origin(远) main(远):master(本)  
//git pull  origin(远) main(远)
7.git push origin(远) master(本):main(远)
=================================================

=================================================
四。重命名origin
1.git init
2.git remote add  local https://github.com/anyexiuming/picture.git 
3.新增内容
4.git add . 
5.git commit -m "xx" 
6.git pull local main
  {
  $ git pull local main
  remote: Enumerating objects: 90, done.
  remote: Counting objects: 100% (90/90), done.
  remote: Compressing objects: 100% (84/84), done.
  remote: Total 90 (delta 16), reused 14 (delta 1), pack-reused 0
  Unpacking objects: 100% (90/90), 11.92 MiB | 2.15 MiB/s, done.
  From https://github.com/anyexiuming/picture
  * branch            main       -> FETCH_HEAD
  * [new branch]      main       -> local/main
  }
7.git push -u local  master:main
8.出错：
  fatal: unable to access 
  'https://github.com/anyexiuming/picture.git/': 
  OpenSSL SSL_read: Connection was aborted, errno 10053
  解决：
  8.1  git config --global http.postBuffer 524288000
  8.2  git config --global http.sslVerify "false"
  
9.git push -u local  master:main
  {
   Enumerating objects: 6, done.
  Counting objects: 100% (6/6), done.
  Delta compression using up to 16 threads
  Compressing objects: 100% (3/3), done.
  Writing objects: 100% (4/4), 79.71 KiB | 19.93 MiB/s, done.
  Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
  remote: Resolving deltas: 100% (1/1), completed with 1 local object.
  To https://github.com/anyexiuming/picture.git
   5cddc46..1f3b399  master -> main
  Branch 'master' set up to track remote branch 'main' from 'local'.
  }
  
=============================================

============================================
远程仓库
查看远程仓库命令： git remote -v
生成密钥：ssh-keygen -t rsa -C "example01@163.com" 为什么GitHub需要SSHKey呢？因为GitHub需要识别出你推送的提交确实是你推送的，而不是别人冒充的，而Git支持SSH协议，所以，GitHub只要知道了你的公钥， 就可以确认只有你自己才能推送。当然，GitHub允许你添加多个Key。假定你有若干电脑，你一会儿在公司提交, 一会儿在家里提交，只要把每台电脑的Key都添加到GitHub，就可以在每台电脑上往GitHub推送了。
为本地仓库配置远程仓库：
git remote add <shortname> <url> 
添加一个新的远程 Git 仓库，同时指定一个你可以轻松引用的简写：
    git remote add learngit git@gitee.com:superjay/learngit.git
    本地项目名最好与远程项目名一致
    
